/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

let generateFibonacciSequence = upperLimitNum => {
  let generateResults = () => {
    let results = [1, 2]
    let break = ref(false)
    while !break.contents {
      let currIndex = Js.Array.length(results) - 1
      let nextNum = results[currIndex] + results[currIndex - 1]
      if nextNum <= upperLimitNum {
        let _ = Js.Array.push(nextNum, results)
      } else {
        break := true
      }
    }
    results
  }

  switch upperLimitNum {
  | n when n < 1 => []
  | n when n < 3 => [n]
  | _ => generateResults()
  }
}

let add = (a, b) => a + b

let isEven = n => mod(n, 2) === 0

let fiboEvenSum = num =>
  generateFibonacciSequence(num)->Js.Array2.filter(isEven)->Js.Array2.reduce(add, 0)
